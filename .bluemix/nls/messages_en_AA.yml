---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "1:Create private/public key pairs for Image Signing"
template.description: "2:With this template you can create public/private key pairs to be consumed by an [Image Signing template](https://github.com/open-toolchain/image-signed-secure-kube-toolchain). The key pairs are stored in a [Key Protect](https://.cloud.ibm.com/catalog/services/key-protect) service instance, either using an existing instance or one created by the template."
deploy.title: "3:Create public/private key pairs for image signing "
deploy.description: "4:hello-world simple toolchain"
deploy.longDescription: "5:This template allows you to manage public/private keys for consumption by an image signing template"
deploy.appName: "6:App name"
deploy.apikeyDescription: "7:The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service API and interact with the cluster. You can obtain your API key with 'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by clicking **Create API key** (Each API key only can be viewed once)."
deploy.registryRegionDescription: "8:The IBM Cloud region for image registry"
deploy.registrynsDescription: "9:The namespace in the container image registry. You can set it up with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started."
deploy.regionDescription: "10:The IBM Cloud region for production deployment"
deploy.rgDescription: "11:The IBM Cloud resource group for production deployment"
deploy.apikey: "12:IBM Cloud API key"
deploy.containerregRegion: "13:Container registry region"
deploy.containerregns: "14:Container registry namespace"
deploy.imgregRegion: "15:Container image registry region"
deploy.imgregNs: "16:Container image registry namespace"
deploy.keyDetails: "17:Specify a Key Protect instance name.  If an instance has already been created, the existing one will be used, otherwise a new one will be created. You can specify signer names in the build and validation fields below or use the default values."
deploy.vaultName: "18:Key Protect Vault Instance name"
deploy.buildSigner: "19:DevOps Docker Image Build signer"
deploy.validationSigner: "20:DevOps Docker Image Validation signer"
deploy.rg: "21:Resource Group"
region: "22:Region"
organization: "23:Organization"
space: "24:Space"
prodStage: "25:Production environment"
headerSVG.think: "26:THINK"
headerSVG.code: "27:CODE"
headerSVG.deliver: "28:DELIVER"
headerSVG.run: "29:RUN"
headerSVG.issueTracker: "30:ISSUE TRACKER"
headerSVG.gitlab1: "31:GitLab"
headerSVG.repository: "32:REPOSITORY"
headerSVG.gitlab2: "33:GitLab"
headerSVG.pipeline: "34:PIPELINE"
headerSVG.ibmCloud: "35:IBM Cloud"
headerSVG.bluemix: "36:BLUEMIX"
headerSVG.webIde: "37:WEB IDE"
headerSVG.kubernetes: "38:Kubernetes"
headerSVG.cluster: "39:Cluster"
