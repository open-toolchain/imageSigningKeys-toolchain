apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: delete-key-task
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api endpoint
      default: "https://cloud.ibm.com"
    - name: continuous-delivery-context-secret
      description: name of the secret containing the continuous delivery pipeline context secrets
      default: "secure-properties"
    - name: ibmcloud-apikey-secret-key
      description: field in the secret that contains the api key used to login to ibmcloud
      default: "api-key"
    - name: region
      description: the ibmcloud registry region
    - name: vault-name
      description: The name of the Key Protect instance
    - name: signer
      description: The signer
    - name: resource-group
      description: The resource group
    - name: registry-namespace
      description: the registry namespace
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
  steps:
    - name: delete-key
      image: ibmcom/pipeline-base-image:latest
      env:
        - name: IBMCLOUD_API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: $(params.ibmcloud-apikey-secret-key)
        - name: IBMCLOUD_API
          value: $(params.ibmcloud-api)
        - name: REGION
          value: $(params.region)
        - name: HOME
          value: "/root"
        - name: VAULT_INSTANCE
          value: $(params.vault-name)
        - name: SIGNER
          value: $(params.signer)
        - name: IBMCLOUD_TARGET_RESOURCE_GROUP
          value: $(params.resource-group)
        - name: REGISTRY_NAMESPACE
          value: $(params.registry-namespace)
        - name: PIPELINE_DEBUG
          value: $(params.pipeline-debug)
      script: |
        #!/bin/bash

        if [ $PIPELINE_DEBUG == 1 ]; then
            pwd
            env
            trap env EXIT
            set -x
        fi

        # Restore root & repository keys
        if [ -z "$VAULT_INSTANCE" ]; then
          echo "No op"
        else
          export IBMCLOUD_TARGET_REGION=${REGION:-"eu-gb"}
          
          # if target region is in the 'ibm:yp:<region>' just keep the region part
          REGION_SUBSET=$(echo "$IBMCLOUD_TARGET_REGION" | awk -F ':' '{print $3;}')
          if [[ -z "$REGION_SUBSET" ]]; then
            echo "IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION"
          else
            export IBMCLOUD_TARGET_REGION=$REGION_SUBSET
            echo "IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION. export IBMCLOUD_TARGET_REGION=$REGION_SUBSET done"
          fi
          ibmcloud config --check-version false
          ibmcloud login -a "$IBMCLOUD_API" --apikey "$IBMCLOUD_API_KEY" -r "$IBMCLOUD_TARGET_REGION"
          
          DEVOPS_SIGNER="$SIGNER"
          source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/signing_utils.sh")
          source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/delete_signer_key.sh")
        fi
